{"version":3,"sources":["components/video/Video.module.css","components/video/plugins/transcription/components/Button.ts","components/video/plugins/transcription/components/MenuItem.ts","components/video/plugins/transcription/plugin.ts","components/video/Video.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["module","exports","VideoJsButtonClass","videojs","getComponent","VideoJsMenuClass","VideoJsComponent","Dom","dom","Button","player","title","items","hideThreshold","menu","this","player_","menuButton","options_","titleEl","createEl","className","innerHTML","tabIndex","titleComponent","el","addItem","createItems","call","i","length","menuButton_","el_","setAttribute","MenuItem","item","transcriptButton","plugin","label","selectable","selected","isSelected_","setTranscription","value","Number","Plugin","getPlugin","registerPlugin","TranscriptionSelector","options","config","transcriptionButton","on","event","data","addTranscription","TranscriptionButton","placementIndex","controlBar","children","transcriptionButtonInstance","addChild","componentClass","addClass","setButtonInnerText","removeClass","id","defaultTranscriptId","TranscriptionMenuItem","filter","index","self","findIndex","selfItem","createTranscriptionButton","menuItems","map","getTranscriptionMenuItem","bind","update","onOpen","onClose","parsedValue","parse","entries","container","entry","text","join","$","Video","src","transcriptons","onError","videoRef","React","transcriptonContainerRef","playerRef","posterError","isTranscriptionsHidden","setIsTranscriptionsHidden","current","dispose","controls","fluid","plugins","hlsQualitySelector","displayCurrentQuality","transcriptionSelector","type","width","height","fetchTranscription","a","Promise","all","transcripton","fetch","responses","response","then","texts","preparedTranscription","trigger","catch","classNames","styles","wrapper","ref","transcript","hidden","transcriptHeader","transcriptContainer","process","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bd7e4ceb.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Video_wrapper__3Z0Pe\",\"vjs-resolution-button\":\"Video_vjs-resolution-button__10Glm\",\"vjs-icon-placeholder\":\"Video_vjs-icon-placeholder__2RWlV\",\"vjs-resolution-button-label\":\"Video_vjs-resolution-button-label__35Chm\",\"vjs-menu\":\"Video_vjs-menu__2CBw8\",\"vjs-menu-content\":\"Video_vjs-menu-content__3vyy2\",\"vjs-menu-item\":\"Video_vjs-menu-item__3DE4_\",\"auto\":\"Video_auto__5kQIj\",\"vjs-menu-item-text\":\"Video_vjs-menu-item-text__39xvR\",\"video-js\":\"Video_video-js__1ODmu\",\"vjs-big-play-button\":\"Video_vjs-big-play-button__1b-4X\",\"theme-high-contrast\":\"Video_theme-high-contrast__3K75L\",\"vjs-poster\":\"Video_vjs-poster__Li1Eb\",\"vjs-error-display\":\"Video_vjs-error-display__1ol74\",\"vjs-track-setting\":\"Video_vjs-track-setting__30-ZF\",\"vjs-fluid\":\"Video_vjs-fluid__wjVr5\",\"vjs-16-9\":\"Video_vjs-16-9__YcJ0s\",\"vjs-4-3\":\"Video_vjs-4-3__3J_NU\",\"vjs-tech\":\"Video_vjs-tech__1TcJ2\",\"vjs-control-bar\":\"Video_vjs-control-bar__1nwSX\",\"hasChapters\":\"Video_hasChapters__2AERC\",\"transcript\":\"Video_transcript__1IwwF\",\"hidden\":\"Video_hidden__3Q9Ko\",\"transcriptHeader\":\"Video_transcriptHeader__dzv2P\",\"transcriptContainer\":\"Video_transcriptContainer__2YfRE\"};","import videojs from \"video.js\";\n\nconst VideoJsButtonClass = videojs.getComponent(\"MenuButton\");\nconst VideoJsMenuClass = videojs.getComponent(\"Menu\");\nconst VideoJsComponent = videojs.getComponent(\"MenuItem\");\nconst Dom = videojs.dom;\n\nclass Button extends VideoJsButtonClass {\n  items?: videojs.MenuItem[];\n  hideThreshold?: number;\n\n  constructor(player: videojs.Player) {\n    super(player, { title: \"Transcription\" });\n  }\n\n  createItems(): videojs.MenuItem[] {\n    return [];\n  }\n\n  createMenu(): videojs.Menu {\n    const menu: videojs.Menu = new VideoJsMenuClass(this.player_, {\n      menuButton: this,\n    });\n\n    this.hideThreshold = 0;\n\n    // Add a title list item to the top\n    if (this.options_?.title) {\n      const titleEl = Dom.createEl(\"li\", {\n        className: \"vjs-menu-title\",\n        innerHTML: this.options_.title,\n        tabIndex: -1,\n      });\n      const titleComponent = new VideoJsComponent(this.player_, {\n        // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n        // @ts-ignore\n        el: titleEl,\n      });\n\n      this.hideThreshold += 1;\n\n      menu.addItem(titleComponent);\n    }\n\n    this.items = this.createItems.call(this);\n\n    if (this.items) {\n      // Add menu items to the menu\n      for (let i = 0; i < this.items.length; i++) {\n        menu.addItem(this.items[i]);\n      }\n    }\n\n    // TODO temporary solution\n    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n    // @ts-ignore\n    menu.menuButton_.el_.setAttribute('title', \"Transcription\")\n\n    return menu;\n  }\n}\n\nexport default Button;\n","import videojs from \"video.js\";\nimport Button from \"./Button\";\nimport * as Types from \"../types\";\n\nconst VideoJsMenuItemClass = videojs.getComponent(\"MenuItem\");\n\nclass MenuItem extends VideoJsMenuItemClass {\n  item: Types.Item;\n  transcriptButton: Button;\n  plugin: Types.Plugin;\n\n  private isSelected_?: boolean;\n\n  constructor(\n    player: videojs.Player,\n    item: Types.Item,\n    transcriptButton: Button,\n    plugin: Types.Plugin\n  ) {\n    super(player, {\n      label: item.label,\n      selectable: true,\n      selected: item.selected || false,\n    });\n    this.item = item;\n    this.transcriptButton = transcriptButton;\n    this.plugin = plugin;\n\n    if (this.item.selected) {\n      this.plugin.setTranscription(this.item.value);\n    }\n  }\n\n  handleClick(): void {\n    const selected = this.isSelected_;\n    for (let i = 0; i < Number(this.transcriptButton.items?.length); i += 1) {\n      this.transcriptButton.items?.[i].selected(false);\n    }\n\n    this.plugin.setTranscription(selected ? null : this.item.value);\n    this.selected(!selected);\n  }\n}\n\nexport default MenuItem;\n","/* eslint-disable @typescript-eslint/ban-ts-comment */\n/* eslint-disable @typescript-eslint/no-explicit-any */\nimport { parse } from \"@plussub/srt-vtt-parser\";\nimport videojs from \"video.js\";\nimport TranscriptionButton from \"./components/Button\";\nimport TranscriptionMenuItem from \"./components/MenuItem\";\nimport * as Types from \"./types\";\n\nconst Plugin = videojs.getPlugin(\"plugin\");\n\nconst registerPlugin = videojs.registerPlugin || videojs.plugin;\n\nclass TranscriptionSelector extends Plugin {\n  player: videojs.Player;\n  config: Types.PlayerConfig;\n\n  private items?: Types.Item[];\n  private transcriptionButton?: TranscriptionButton;\n\n  constructor(player: videojs.Player, options: Types.PlayerConfig) {\n    super(player, options);\n    this.player = player;\n    this.config = options;\n\n    this.on(\"addTranscription\", (event, { data }) => {\n      this.addTranscription.call(this, data);\n    });\n  }\n\n  createTranscriptionButton(): void {\n    this.transcriptionButton = new TranscriptionButton(this.player);\n\n    const placementIndex = this.player.controlBar.children().length - 2;\n    const transcriptionButtonInstance = this.player.controlBar.addChild(\n      this.transcriptionButton,\n      { componentClass: \"subtitles\" },\n      this.config.placementIndex || placementIndex\n    );\n\n    // for change icon create new class like this\n    // .vjs-icon-audio:before, .video-js .vjs-audio-button .vjs-icon-placeholder:before\n    // and set `content: file`\n    transcriptionButtonInstance.addClass(\"vjs-subtitles-button\");\n    this.setButtonInnerText(\"Transcription\");\n    transcriptionButtonInstance.removeClass(\"vjs-hidden\");\n  }\n\n  // { ...item } === copy item\n  getTranscriptionMenuItem({ ...item }: Types.Item): TranscriptionMenuItem {\n    const player = this.player;\n    const transcriptionButton =\n      this.transcriptionButton || new TranscriptionButton(player);\n\n    if (item.id === this.config.defaultTranscriptId) {\n      item.selected = true;\n    }\n    return new TranscriptionMenuItem(player, item, transcriptionButton, this);\n  }\n\n  addTranscription(items: Types.Item[]): void {\n    // unique\n    this.items = [...(this.items || []), ...items].filter(\n      (item, index, self) =>\n        self.findIndex((selfItem) => selfItem.value === item.value) === index\n    );\n    if (this.items) {\n      this.createTranscriptionButton();\n    }\n\n    const menuItems = this.items.map(this.getTranscriptionMenuItem.bind(this));\n\n    if (this.transcriptionButton) {\n      this.transcriptionButton.createItems = function () {\n        return menuItems;\n      };\n      this.transcriptionButton.update.call(this.transcriptionButton);\n    }\n  }\n\n  setTranscription(value: string): void {\n    // change this function, i don't have a time\n    const {onOpen, onClose} = this.config;\n    if (value) {\n      if (onOpen){\n        onOpen();\n      }\n      const parsedValue = parse(value).entries;\n      this.config.container.innerHTML = parsedValue\n        .map((entry) => `<p>${entry.text}</p>`)\n        .join(\"\\n\");\n    } else {\n      if (onClose){\n        onClose();\n      }\n      this.config.container.innerHTML = \"\";\n    }\n  }\n\n  setButtonInnerText(text: string): void {\n    if (this.transcriptionButton) {\n      this.transcriptionButton.menuButton_.$(\".vjs-control-text\").innerHTML =\n        text;\n    }\n  }\n}\n\nregisterPlugin(\"transcriptionSelector\", TranscriptionSelector);\n\nexport default TranscriptionSelector;\n","/* eslint-disable @typescript-eslint/ban-ts-comment */\r\nimport * as React from \"react\";\r\nimport classNames from \"classnames\";\r\nimport videojs from \"video.js\";\r\nimport \"video.js/dist/video-js.css\";\r\nimport \"videojs-hls-quality-selector\";\r\nimport \"videojs-hls-quality-selector/dist/videojs-hls-quality-selector.css\";\r\nimport \"./plugins/transcription/plugin\";\r\nimport { VideoTypes } from \"./duck\";\r\nimport styles from \"./Video.module.css\";\r\n\r\ninterface VideoProps {\r\n  src: string;\r\n  className?: string;\r\n  options?: any;\r\n  autoResolution?: boolean;\r\n  transcriptons: VideoTypes.Transcription[];\r\n  onError?: React.DOMAttributes<HTMLVideoElement>[\"onError\"];\r\n}\r\n\r\ntype VideoPlayer = videojs.Player & {\r\n  updateSrc: (...args: any[]) => void;\r\n  transcriptionSelector: () => videojs.Player;\r\n};\r\n\r\nconst Video: React.FC<VideoProps> = ({\r\n  src,\r\n  options,\r\n  className,\r\n  transcriptons,\r\n  onError = () => {},\r\n}) => {\r\n  const videoRef = React.useRef<HTMLVideoElement>(null);\r\n  const transcriptonContainerRef = React.useRef<HTMLDivElement>(null);\r\n  const playerRef = React.useRef<VideoPlayer>();\r\n\r\n  const posterError = React.useRef(false);\r\n  const [isTranscriptionsHidden, setIsTranscriptionsHidden]= React.useState(true);\r\n\r\n  React.useEffect(() => {\r\n    if (playerRef.current && playerRef.current.dispose) {\r\n      playerRef.current.dispose();\r\n    }\r\n    if (!videoRef.current) {\r\n      return;\r\n    }\r\n    playerRef.current = videojs(\r\n      videoRef.current,\r\n      {\r\n        controls: true,\r\n        fluid: true,\r\n        plugins: {\r\n          hlsQualitySelector: { displayCurrentQuality: true },\r\n          transcriptionSelector: {\r\n            // defaultTranscriptId: \"english\",\r\n            container: transcriptonContainerRef.current,\r\n            onOpen: () => setIsTranscriptionsHidden(false),\r\n            onClose: () => setIsTranscriptionsHidden(true),\r\n          },\r\n        },\r\n        ...options,\r\n      },\r\n      () => {\r\n        playerRef.current?.src([{ src, type: \"application/x-mpegURL\" }]);\r\n      }\r\n    ) as VideoPlayer;\r\n\r\n    return () => {\r\n      playerRef.current?.dispose();\r\n    };\r\n  }, []);\r\n\r\n  React.useEffect(() => {\r\n    playerRef.current?.width(options?.width);\r\n  }, [options?.width]);\r\n\r\n  React.useEffect(() => {\r\n    playerRef.current?.height(options?.height);\r\n  }, [options?.height]);\r\n\r\n  React.useEffect(() => {\r\n    playerRef.current?.src([{ src, type: \"application/x-mpegURL\" }]);\r\n  }, [src]);\r\n\r\n  // use smth else\r\n  const fetchTranscription = async (\r\n    transcriptons: VideoTypes.Transcription[]\r\n  ) => {\r\n    const responses = await Promise.all(\r\n      transcriptons.map((transcripton) => fetch(transcripton.src))\r\n    );\r\n    return await Promise.all(responses.map((response) => response.text()));\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    fetchTranscription(transcriptons)\r\n      .then((texts) => {\r\n        const preparedTranscription = transcriptons.map(\r\n          (transcripton, index) => ({\r\n            id: transcripton.id,\r\n            label: transcripton.label,\r\n            value: texts[index],\r\n          })\r\n        );\r\n\r\n        playerRef.current\r\n          ?.transcriptionSelector()\r\n          .trigger(\"addTranscription\", { data: preparedTranscription });\r\n      })\r\n      .catch(() => {});\r\n  }, [transcriptons]);\r\n\r\n  return (\r\n    <>\r\n      <div className={classNames(className, styles.wrapper)}>\r\n        <video\r\n          ref={videoRef}\r\n          className=\"video-js\"\r\n          onError={(event) => {\r\n            if (posterError.current) {\r\n              onError(event);\r\n            }\r\n          }}\r\n        />\r\n      </div>\r\n      <div className={classNames(styles.transcript, {\r\n        [styles.hidden]: isTranscriptionsHidden,\r\n      })}>\r\n        <div className={styles.transcriptHeader}>Video transcript</div>\r\n        <div\r\n          ref={transcriptonContainerRef}\r\n          className={styles.transcriptContainer}\r\n        />\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Video;\r\n","import React from \"react\";\nimport { VideoTypes } from \"./components/video/duck\";\nimport { Video } from \"./components\";\nimport \"./App.css\";\n\nconst src = `${process.env.REACT_APP_URL}/2.P_13.4_ForceandMotionQC_1.m3u8`;\n\nconst transcriptons: VideoTypes.Transcription[] = [\n  {\n    id: \"english\",\n    src: `${process.env.REACT_APP_URL}/force_and_motion_en.vtt`,\n    label: \"english\",\n  },\n  {\n    id: \"spanish\",\n    src: `${process.env.REACT_APP_URL}/force_and_motion_spa.vtt`,\n    label: \"spanish\",\n  },\n];\nconst App: React.FC = () => {\n  return (\n    <div className=\"App\">\n      <Video src={src} transcriptons={transcriptons} />\n    </div>\n  );\n};\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}